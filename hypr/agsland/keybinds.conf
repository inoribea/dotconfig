$scrPath = $HOME/.local/share/bin/ # set scripts path

$mainMod = SUPER # windows key

# assign apps
$term = kitty
$editor = code
$file = dolphin
$browser = zen
$rss = follow
$writer = obsidian
$music = SPlayer
$game = $scrPath/gamelauncher.sh
$waydroid = waydroid-launcher

# Application shortcuts
bind = $mainMod, T, exec, $term  # open terminal
bind = $mainMod, E, exec, $file # open file manager
bind = $mainMod, C, exec, $editor # open vscode
bind = $mainMod, F, exec, $browser # open browser
bind = $mainMod, M, exec, $music # open music
bind = $mainMod, R, exec, $rss # open RSS
bind = $mainMod, N, exec, $writer # open writer
bind = $mainMod, apostrophe, exec, $game # open steam
bind = $mainMod, backslash, exec, $waydroid # open waydroid

# Window/Session actions
bindd = $mainMod ALT, C,Color Picker , exec, hyprpicker -a # Pick color (Hex) >> clipboard#
bind = $mainMod, I, exec, dolphin ~/.config/hypr
bind = $mainMod, Q, exec, $scrPath/dontkillsteam.sh # killactive, kill the window on focus
bind = ALT, F4, exec, $scrPath/dontkillsteam.sh # killactive, kill the window on focus
bind = $mainMod, delete, exit, # kill hyperland session
bind = $mainMod ALT, G, togglegroup, # toggle the window on focus to group (tab mode)
bind = $mainMod, W, togglefloating, # toggle the window on focus to float
bind = $mainMod ALT, W, exec, $scrPath/windowpin.sh # toggle pin on focused window
bind = $mainMod, return, fullscreen, 1 # toggle the window on focus to max
bind = $mainMod, escape, fullscreen, # toggle the window on focus to fullscreen
bind = $mainMod, X, togglesplit, # dwindles
bind = $mainMod, H, pseudo, # dwindle
bind = $mainMod, L, exec, swaylock # lock screen
bind = $mainMod, backspace, exec, $scrPath/logoutlaunch.sh 1 # logout menu
bind = $CONTROL, ESCAPE, exec, killall waybar || waybar # toggle waybar
bind = $CONTROL SHIFT, ESCAPE, exec, konsole -e htop  # open htop/btop if installed or default to top (system monitor)
#bind = $mainMod, G, togglegroup
#bind = $mainMod + SHIFT, G, changegroupactive




# Rofi menus
bind = $mainMod, A, exec, pkill -x rofi || $scrPath/rofilaunch.sh d # launch desktop applications
#bind = $mainMod, tab, exec, pkill -x rofi || $scrPath/rofilaunch.sh w # switch between desktop applications
#bind = $mainMod, R, exec, pkill -x rofi || $scrPath/rofilaunch.sh f # browse system files

# Audio control
bindl  = $mainMod, F10, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
bindel = $mainMod, F11, exec, $scrPath/volumecontrol.sh -o d # decrease volume
bindel = $mainMod, F12, exec, $scrPath/volumecontrol.sh -o i # increase volume
bindl  = $mainMod + ALT, mouse_up, exec, $scrPath/volumecontrol.sh -o d # decrease volume
bindl  = $mainMod + ALT, mouse_down, exec, $scrPath/volumecontrol.sh -o i # increase volume
bindl  = , XF86AudioMute, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
bindl  = , XF86AudioMicMute, exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
bindel = , XF86AudioLowerVolume, exec, $scrPath/volumecontrol.sh -o d # decrease volume
bindel = , XF86AudioRaiseVolume, exec, $scrPath/volumecontrol.sh -o i # increase volume

# Media control
bindl  = , XF86AudioPlay, exec, playerctl play-pause
bindl  = , XF86AudioPause, exec, playerctl play-pause
bindl  = , XF86AudioNext, exec, playerctl next
bindl  = , XF86AudioPrev, exec, playerctl previous

bindl = $mainMod, mouse:274, exec, playerctl play-pause
bindl  = $mainMod, mouse:275, exec, playerctl next
bindl  = $mainMod, mouse:276, exec, playerctl previous

bindl  = $mainMod, slash, exec, playerctl play-pause
bindl  = $mainMod, period, exec, playerctl next
bindl  = $mainMod, comma, exec, playerctl previous

bindd = $mainMod SHIFT, m, Open EasyEffects, exec, easyeffects

bind = $mainMod ALT , M, exec, konsole -e cava

# Brightness control
bindel = , XF86MonBrightnessUp, exec, $scrPath/brightnesscontrol.sh i # increase brightness
bindel = , XF86MonBrightnessDown, exec, $scrPath/brightnesscontrol.sh d # decrease brightness

# Move between grouped windows
bind = $mainMod ALT , H, changegroupactive, b
bind = $mainMod ALT , L, changegroupactive, f

# Screenshot/Screencapture
bind = $mainMod+Ctrl, P, exec, $scrPath/screenshot.sh s # partial screenshot capture
bind = $mainMod, P, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
bind = $mainMod+Alt, P, exec, $scrPath/screenshot.sh m # monitor screenshot capture
bind = , Print, exec, $scrPath/screenshot.sh p # all monitors screenshot capture

# Exec custom scripts
bind = $CTRL ALT, U, exec, hyprctl dispatch exec systemupdate.sh up # system update
bind = $CTRL ALT, G, exec, $scrPath/gamemode.sh # disable hypr effects for gamemode
bind = $CTRL ALT, right, exec, $scrPath/swwwallpaper.sh -n # next wallpaper
bind = $CTRL ALT, left, exec, $scrPath/swwwallpaper.sh -p # previous wallpaper
bind = $CTRL ALT, up, exec, $scrPath/wbarconfgen.sh n # next waybar mode
bind = $CTRL ALT, down, exec, $scrPath/wbarconfgen.sh p # previous waybar mode
bind = $CTRL ALT, D, exec, $scrPath/wallbashtoggle.sh  # toggle wallbash on/off
bind = $CTRL ALT, T, exec, pkill -x rofi || $scrPath/themeselect.sh # theme select menu
bind = $CTRL ALT, A, exec, pkill -x rofi || $scrPath/rofiselect.sh # rofi style select menu
bind = $CTRL ALT, X, exec, pkill -x rofi || $scrPath/themestyle.sh # launch theme style select menu
bind = $CTRL ALT, W, exec, pkill -x rofi || $scrPath/swwwallselect.sh # rofi wall select menu
bind = $mainMod, V, exec, pkill -x rofi || $scrPath/cliphist.sh c  # open Pasteboard in screen center
bind = $mainMod, K, exec, $scrPath/keybinds_hint.sh # change keyboard layout
bind = $mainMod+Alt, A, exec, pkill -x rofi || $scrPath/animations.sh # launch animations Manager

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = ALT, Tab, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Switch workspaces relative to the active workspace with mainMod + CTRL + [←→]
bind = $mainMod CTRL, right, workspace, r+1 
bind = $mainMod CTRL, left, workspace, r-1

# move to the first empty workspace instantly with mainMod + CTRL + [↓]
bind = $mainMod CTRL, down, workspace, empty 

# Resize windows
binde = $mainMod SHIFT, right, resizeactive, 30 0
binde = $mainMod SHIFT, left, resizeactive, -30 0
binde = $mainMod SHIFT, up, resizeactive, 0 -30
binde = $mainMod SHIFT, down, resizeactive, 0 30

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Move active window to a relative workspace with mainMod + CTRL + ALT + [←→]
bind = $mainMod CTRL ALT, right, movetoworkspace, r+1
bind = $mainMod CTRL ALT, left, movetoworkspace, r-1

# Move active window around current workspace with mainMod + ALT [←→↑↓]
bind = $mainMod ALT, left, movewindow, l
bind = $mainMod ALT, right, movewindow, r
bind = $mainMod ALT, up, movewindow, u
bind = $mainMod ALT, down, movewindow, d

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/Resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Special workspaces (scratchpad)
bind = $mainMod ALT, Grave, movetoworkspacesilent, special
bind = $mainMod, Grave, togglespecialworkspace,

# Move window silently to workspace Super + Alt + [0-9]
bind = $mainMod ALT, 1, movetoworkspacesilent, 1
bind = $mainMod ALT, 2, movetoworkspacesilent, 2
bind = $mainMod ALT, 3, movetoworkspacesilent, 3
bind = $mainMod ALT, 4, movetoworkspacesilent, 4
bind = $mainMod ALT, 5, movetoworkspacesilent, 5
bind = $mainMod ALT, 6, movetoworkspacesilent, 6
bind = $mainMod ALT, 7, movetoworkspacesilent, 7
bind = $mainMod ALT, 8, movetoworkspacesilent, 8
bind = $mainMod ALT, 9, movetoworkspacesilent, 9
bind = $mainMod ALT, 0, movetoworkspacesilent, 10

# Trigger when the switch is turning off
bindl= , switch:on:Lid Switch, exec, hyprlock #&& systemctl suspend

# You can put your preferred keybinds here
# https://wiki.hyprland.org/Configuring/Binds/

$mainMod = SUPER
$shiftKey = SHIFT
$alttKey = ALT

# Shortcuts
# bindd = $mainMod $shiftKey, Q, Exit Hyprland, exit
# bindd = $mainMod, R, Open application launcher, exec, wofi --show drun
# bindd = $alttKey, TAB, Open window switcher, exec, wofi --show window

# Applications

bindd = $mainMod $shiftKey, h, Open Hopofy script, exec, LANG=en_US.UTF-8 konsole --noclose -e ~/hopofy.sh
# bindd = $mainMod $shiftKey, f, Open Firefox, exec, firefox
# bindd = $mainMod $shiftKey, f, Open Thorium Browser, exec, thorium-browser
# bindd = $mainMod $shiftKey, f, Open Brave Browser, exec, brave-browser
# bindd = $shiftKey, escape, Open System Monitor, exec, plasma-systemmonitor
# bindd = $mainMod $shiftKey, n, Open Notion, exec, notion-app-enhanced
bindd = $mainMod, o, Open System Settings, exec, gnome-tweaks
# bindd = $mainMod, l, Lock screen, exec, /usr/lib/kscreenlocker_greet --immediateLock

# Menus
bindd = $mainMod, f2, Toggle notification center, exec, ags -r "ToggleNotificationCenter()"
bindd = $mainMod, f4, Toggle monitors menu, exec, ags -r "toggleMonitors()"
bindd = $mainMod, f5, Toggle network menu, exec, ags -r "toggleNetwork()"
bindd = $mainMod, f8, Show calendar menu, exec, ags -r "showCalendarMenu()"

# Move focus with mainMod + arrow keys

# Monitors

bindd = $mainMod $alttKey, r, Force renderer reload, forcerendererreload

# MINIMIZE
# bindd = $mainMod, n, Move to workspace 11 (silent), movetoworkspacesilent, 11
bindd = $mainMod, n, Minimize window, exec, sh ~/.config/hypr/scripts/minimiz.sh
bindd = $mainMod CONTROL, n, Get minimized windows, exec, sh ~/.config/hypr/scripts/get_minimized.sh

# bindd = $mainMod,b, Send window to bottom layer, exec, hyprctl dispatch layer bottom
bindd = $mainMod, b, Send focused window to bottom layer, exec, hyprctl dispatch layer "bottom" focused
# Lines ending with `# [hidden]` won't be shown on cheatsheet
# Lines starting with #! are section headings

bindl = Alt ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle # [hidden]
bindl = Super ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle # [hidden]
bindl = ,XF86AudioMute, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0% # [hidden]
bindle=, XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+ # [hidden]
bindle=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- # [hidden]

# Uncomment these if you can't get AGS to work
#bindle=, XF86MonBrightnessUp, exec, brightnessctl set '12.75+'
#bindle=, XF86MonBrightnessDown, exec, brightnessctl set '12.75-'

#!
##! Essentials for beginners

bind = , Super, exec, true # Open app launcher
bind = Ctrl+Super, T, exec, ~/.config/ags/scripts/color_generation/switchwall.sh # Change wallpaper
##! Actions
# OCR
#bind = Super+Alt,T,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract -l eng "tmp.png" - | wl-copy && rm "tmp.png" # Screen snip to text >> clipboard
bind = Super+Alt,T,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract "tmp.png" - | wl-copy && rm "tmp.png" # [hidden]
#!
##! Widgets
bindr = Ctrl+Super, R, exec, killall ags ydotool; ags & # Restart widgets
bindr = Ctrl+Super+Alt, R, exec, hyprctl reload; killall ags ydotool; ags & # [hidden]
bind = Alt, Escape, exec, pkill waybar || ags run-js 'cycleMode();' # Cycle bar mode (normal, focus)
bind = Super, Tab, exec, ags -t 'overview' # [hidden]
bind = Super+Alt, Slash, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "cheatsheet""$i"; done # Show cheatsheet
bind = Super, F1, exec, ags -t 'sideleft' # Toggle left sidebar
bind = Super, F3, exec, ags -t 'sideright' # Toggle right sidebar
bind = Super+Alt, Escape, exec, pkill waybar || ags run-js 'openColorScheme.value = true; Utils.timeout(2000, () => openColorScheme.value = false);' # View color scheme and options
bind = Super+Alt, K, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "osk""$i"; done # Toggle on-screen keyboard
bind = Super, backspace, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "session""$i"; done && pkill wlogout# Toggle power menu
bind = Ctrl+Super, G, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "crosshair""$i"; done # Toggle crosshair
bindle=, XF86MonBrightnessUp, exec, ags run-js 'brightness.screen_value += 0.05; indicator.popup(1);' # [hidden]
bindle=, XF86MonBrightnessDown, exec, ags run-js 'brightness.screen_value -= 0.05; indicator.popup(1);' # [hidden]s

# Testing
#bind = SuperAlt, f12, exec, notify-send "Hyprland version: $(hyprctl version | head -2 | tail -1 | cut -f2 -d ' ')" "owo" -a 'Hyprland keybind'
#bind = Super+Alt, f12, exec, notify-send "Millis since epoch" "$(date +%s%N | cut -b1-13)" -a 'Hyprland keybind'
#bind = Super+Alt, f12, exec, notify-send 'Test notification' "Here's a really long message to test truncation and wrapping\nYou can middle click or flick this notification to dismiss it!" -a 'Shell' -A "Test1=I got it!" -A "Test2=Another action" -t 5000 # [hidden]
#bind = Super+Alt, Slash, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind' # [hidden]

#!
##! Apps
#bind = Super+Alt, Slash, exec, pkill anyrun || anyrun # Toggle fallback launcher: anyruna
bind = Super+Alt, A, exec, fuzzel # Toggle fallback launcher: fuzzel
bind = Super+Alt, O, exec, XDG_CURRENT_DESKTOP="gnome" gnome-control-center # Launch GNOME Settings

# Cursed stuff
## Make window not amogus large
bind = Ctrl+Super, Backslash, resizeactive, exact 640 480 # [hidden]

# kill waybar

 bind = Ctrl, Escape, exec, pkill waybar || dunst
